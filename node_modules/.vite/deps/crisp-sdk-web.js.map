{
  "version": 3,
  "sources": ["../../crisp-sdk-web/src/message.ts", "../../crisp-sdk-web/src/user.ts", "../../crisp-sdk-web/src/trigger.ts", "../../crisp-sdk-web/src/session.ts", "../../crisp-sdk-web/src/chat.ts", "../../crisp-sdk-web/src/index.ts"],
  "sourcesContent": ["import { CrispClass as Crisp } from \"./index\";\n\nexport type FileMessage = {\n  url: string,\n  type: string,\n  name: string\n};\n\nexport type AnimationMessage = {\n  url: string,\n  type: string\n};\n\nexport type AudioMessage = {\n  url: string,\n  type: string,\n  duration: number\n};\n\nexport type PickerMessage = {\n  id: string,\n  text: string,\n  choices: PickerMessageChoices[]\n};\n\nexport type PickerMessageChoices = {\n  value: string,\n  label: string,\n  selected: boolean\n};\n\nexport type FieldMessage = {\n  id: string,\n  text: string,\n  explain: string\n};\n\nexport type CarouselMessageTargets = {\n  title: string,\n  description?: string,\n  image?: string\n  actions: CarouselMessageTargetsActions[]\n};\n\nexport type CarouselMessageTargetsActions = {\n  label: string,\n  url: string\n};\n\nexport type CarouselMessage = {\n  text: string,\n  targets: CarouselMessageTargets[]\n};\n\nexport default class CrispMessage {\n  private parent: Crisp;\n\n  constructor(crisp: Crisp) {\n    this.parent = crisp;\n  }\n\n  send(type: string, content: string | FileMessage | AnimationMessage | AudioMessage) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"do\", \"message:send\", [type, content]]);\n  }\n\n  sendText(content: string) {\n    this.send(\"text\", content);\n  }\n\n  sendFile(content: FileMessage) {\n    this.send(\"file\", content);\n  }\n\n  sendAnimation(content: AnimationMessage) {\n    this.send(\"animation\", content);\n  }\n\n  sendAudio(content: AudioMessage) {\n    this.send(\"audio\", content);\n  }\n\n  show(type: string, content: string | FileMessage | AnimationMessage | AudioMessage | FieldMessage | PickerMessage | CarouselMessage) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"do\", \"message:show\", [type, content]]);\n  }\n\n  showText(content: string) {\n    this.show(\"text\", content);\n  }\n\n  showFile(content: FileMessage) {\n    this.show(\"file\", content);\n  }\n\n  showAnimation(content: AnimationMessage) {\n    this.show(\"animation\", content);\n  }\n\n  showAudio(content: AudioMessage) {\n    this.show(\"audio\", content);\n  }\n\n  showPicker(content: PickerMessage) {\n    this.show(\"picker\", content);\n  }\n\n  showField(content: FieldMessage) {\n    this.show(\"field\", content);\n  }\n\n  showCarousel(content: CarouselMessage) {\n    this.show(\"carousel\", content);\n  }\n\n  markAsRead() {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"do\", \"message:read\"]);\n  }\n\n  onMessageSent(callback: Function) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"off\", \"message:sent\"]);\n    window.$crisp.push([\"on\", \"message:sent\", callback]);\n  }\n\n  onMessageReceived(callback: Function) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"off\", \"message:received\"]);\n    window.$crisp.push([\"on\", \"message:received\", callback]);\n  }\n\n  onMessageComposeSent(callback: Function) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"off\", \"message:compose:sent\"]);\n    window.$crisp.push([\"on\", \"message:compose:sent\", callback]);\n  }\n\n  onMessageComposeReceive(callback: Function) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"off\", \"message:compose:received\"]);\n    window.$crisp.push([\"on\", \"message:compose:received\", callback]);\n  }\n}\n", "import { CrispClass as Crisp } from \"./index\";\n\nexport type CompanyData = {\n  url?: string,\n  description?: string,\n  employment?: CompanyDataEmployment | string[],\n  geolocation?: CompanyDataGeolocation | string[]\n};\n\nexport type CompanyDataEmployment = {\n  title: string,\n  role?: string\n};\n\nexport type CompanyDataGeolocation = {\n  country: string,\n  city?: string\n};\n\nexport default class CrispUser {\n  private parent: Crisp;\n\n  constructor(crisp: Crisp) {\n    this.parent = crisp;\n  }\n\n  setNickname(nickname: string) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"set\", \"user:nickname\", [nickname]]);\n  }\n\n  setEmail(email: string, hmac?: string) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"set\", \"user:email\", [email, hmac]]);\n  }\n\n  setPhone(phone: string) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"set\", \"user:phone\", [phone]]);\n  }\n\n  setAvatar(avatar: string) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"set\", \"user:avatar\", [avatar]]);\n  }\n\n  setCompany(name: string, data: CompanyData) {\n    const _payload: CompanyData = {};\n\n    if (data && data.url) {\n      _payload.url = data.url;\n    }\n\n    if (data && data.description) {\n      _payload.description = data.description;\n    }\n\n    if (data && data.employment) {\n      _payload.employment = [\n        (data.employment as CompanyDataEmployment).title\n      ];\n\n      if ((data.employment as CompanyDataEmployment).role) {\n        _payload.employment.push((data.employment as CompanyDataEmployment).role!);\n      }\n    }\n\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"set\", \"user:company\", [name, _payload]]);\n  }\n\n  getEmail(): string | null {\n    if (!this.parent.isCrispInjected()) {\n      return null;\n    }\n\n    return window.$crisp.get(\"user:email\");\n  }\n\n  getPhone(): string | null {\n    if (!this.parent.isCrispInjected()) {\n      return null;\n    }\n\n    return window.$crisp.get(\"user:phone\");\n  }\n\n  getNickname(): string | null {\n    if (!this.parent.isCrispInjected()) {\n      return null;\n    }\n\n    return window.$crisp.get(\"user:nickname\");\n  }\n\n  getAvatar(): string | null {\n    if (!this.parent.isCrispInjected()) {\n      return null;\n    }\n\n    return window.$crisp.get(\"user:avatar\");\n  }\n\n  getCompany(): object | null {\n    if (!this.parent.isCrispInjected()) {\n      return null;\n    }\n\n    return window.$crisp.get(\"user:company\");\n  }\n\n  onEmailChanged(callback: Function) {\n    if (this.parent.isCrispInjected()) {\n      window.$crisp.push([\"off\", \"user:email:changed\"]);\n      window.$crisp.push([\"on\", \"user:email:changed\", callback]);\n    }\n  }\n\n  onPhoneChanged(callback: Function) {\n    if (this.parent.isCrispInjected()) {\n      window.$crisp.push([\"off\", \"user:phone:changed\"]);\n      window.$crisp.push([\"on\", \"user:phone:changed\", callback]);\n    }\n  }\n\n  onNicknameChanged(callback: Function) {\n    if (this.parent.isCrispInjected()) {\n      window.$crisp.push([\"off\", \"user:nickname:changed\"]);\n      window.$crisp.push([\"on\", \"user:nickname:changed\", callback]);\n    }\n  }\n\n  onAvatarChanged(callback: Function) {\n    if (this.parent.isCrispInjected()) {\n      window.$crisp.push([\"off\", \"user:avatar:changed\"]);\n      window.$crisp.push([\"on\", \"user:avatar:changed\", callback]);\n    }\n  }\n}\n", "import { CrispClass as Crisp } from \"./index\";\n\nexport default class CrispTrigger {\n  private parent: Crisp;\n\n  constructor(crisp: Crisp) {\n    this.parent = crisp;\n  }\n\n  run(name: string) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"do\", \"trigger:run\", [name]]);\n  }\n}\n", "import { CrispClass as Crisp } from \"./index\";\n\nexport enum EventsColors {\n  Red = \"red\",\n  Orange = \"orange\",\n  Yellow = \"yellow\",\n  Green = \"green\",\n  Blue = \"blue\",\n  Purple = \"purple\",\n  Pink = \"pink\",\n  Brown = \"brown\",\n  Grey = \"grey\",\n  Black = \"black\"\n}\n\nexport default class CrispSession {\n  private parent: Crisp;\n\n  constructor(crisp: Crisp) {\n    this.parent = crisp;\n  }\n\n  reset(reload = false) {\n    if (this.parent.isCrispInjected()) {\n      window.$crisp.do(\"session:reset\", [reload]);\n    }\n  }\n\n  setSegments(segments: string[], overwrite: boolean) {\n    this.parent.createSingletonIfNecessary();\n\n    $crisp.push([\"set\", \"session:segments\", [segments, overwrite]]);\n  }\n\n  setData(data: object) {\n    const _payload = [];\n\n    Object.entries(data).forEach(item => {\n      if (this.isValidDataValue(item[0])) {\n        _payload.push([item[0], item[1]]);\n      }\n    });\n\n    this.parent.createSingletonIfNecessary();\n\n    $crisp.push([\"set\", \"session:data\", [_payload]]);\n  }\n\n  pushEvent(name: string, data: object = {}, color: EventsColors = EventsColors.Blue) {\n    if (this.parent.isCrispInjected()) {\n      window.$crisp.push([\"set\", \"session:event\", [[[name, data, color]]]]);\n    }\n  }\n\n  getData(key: string): string | boolean | number | undefined {\n    if (!this.parent.isCrispInjected()) {\n      return undefined;\n    }\n\n    return window.$crisp.get(\"session:data\", key);\n  }\n\n  getIdentifier(): string | null {\n    if (!this.parent.isCrispInjected()) {\n      return null;\n    }\n\n    return window.$crisp.get(\"session:identifier\");\n  }\n\n\n  onLoaded(callback: Function) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"off\", \"session:loaded\"]);\n    window.$crisp.push([\"on\", \"session:loaded\", callback]);\n  }\n\n  private isValidDataValue(value: string): boolean {\n    return (\n      typeof value === \"string\" ||\n      typeof value === \"number\" ||\n      typeof value === \"boolean\"\n    );\n  }\n}\n", "import { CrispClass as Crisp } from \"./index\";\n\nexport default class CrispChat {\n  private parent: Crisp;\n\n  constructor(crisp: Crisp) {\n    this.parent = crisp;\n  }\n\n  show() {\n    this.parent.autoInjectIfNecessasy();\n\n    window.$crisp.push([\"do\", \"chat:show\"]);\n  }\n\n  hide() {\n    this.parent.autoInjectIfNecessasy();\n\n    window.$crisp.push([\"do\", \"chat:hide\"]);\n  }\n\n  open() {\n    this.parent.autoInjectIfNecessasy();\n\n    window.$crisp.push([\"do\", \"chat:open\"]);\n  }\n\n  close() {\n    if (this.parent.isCrispInjected()) {\n      window.$crisp.push([\"do\", \"chat:close\"]);\n    }\n  }\n\n  unreadCount(): number {\n    if (!this.parent.isCrispInjected()) {\n      return 0;\n    }\n\n    return window.$crisp.get(\"chat:unread:count\");\n  }\n\n  isChatOpened(): boolean {\n    if (!this.parent.isCrispInjected()) {\n      return false;\n    }\n\n    return window.$crisp.is(\"chat:opened\");\n  }\n\n  isVisible(): boolean {\n    if (!this.parent.isCrispInjected()) {\n      return false;\n    }\n\n    return window.$crisp.is(\"chat:visible\");\n  }\n\n  onChatInitiated(callback: () => void) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"off\", \"chat:initiated\"]);\n    window.$crisp.push([\"on\", \"chat:initiated\", callback]);\n  }\n\n  onChatOpened(callback: () => void) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"off\", \"chat:opened\"]);\n    window.$crisp.push([\"on\", \"chat:opened\", callback]);\n  }\n\n  onChatClosed(callback: () => void) {\n    this.parent.createSingletonIfNecessary();\n\n    window.$crisp.push([\"off\", \"chat:closed\"]);\n    window.$crisp.push([\"on\", \"chat:closed\", callback]);\n  }\n}\n", "import CrispMessage from \"./message\";\n\nexport {\n  AnimationMessage,\n  AudioMessage,\n  FileMessage,\n  PickerMessage,\n  PickerMessageChoices,\n  FieldMessage\n} from \"./message\";\n\nimport CrispUser from \"./user\";\n\nexport {\n  CompanyData,\n  CompanyDataEmployment,\n  CompanyDataGeolocation\n} from \"./user\";\n\nimport CrispTrigger from \"./trigger\";\n\nimport CrispSession from \"./session\";\n\nexport {\n  EventsColors,\n} from \"./session\";\n\nimport CrispChat from \"./chat\";\n\n/* eslint-disable no-var, @typescript-eslint/no-explicit-any */\ndeclare global {\n  var $crisp: any;\n  var CRISP_WEBSITE_ID: string;\n  var CRISP_TOKEN_ID: string;\n  var CRISP_RUNTIME_CONFIG: any;\n  var CRISP_COOKIE_DOMAIN: string;\n  var CRISP_COOKIE_EXPIRE: number\n}\n/* eslint-enable no-var, @typescript-eslint/no-explicit-any */\n\n\nexport type Options = {\n  clientUrl?: string\n  autoload?: boolean,\n  tokenId?: string\n  locale?: string\n  sessionMerge?: boolean\n  cookieDomain?: string\n  cookieExpire?: number\n  lockMaximized?: boolean\n  lockFullview?: boolean\n  safeMode?: boolean\n};\n\nexport enum ChatboxColors {\n  Default = \"default\",\n  Amber = \"amber\",\n  Black = \"black\",\n  Blue = \"blue\",\n  BlueGrey = \"blue_grey\",\n  LightBlue = \"light_blue\",\n  Brown = \"brown\",\n  Cyan = \"cyan\",\n  Green = \"green\",\n  LightGreen = \"light_green\",\n  Grey = \"grey\",\n  Indigo = \"indigo\",\n  Orange = \"orange\",\n  DeepOrange = \"deep_orange\",\n  Pink = \"pink\",\n  Purple = \"purple\",\n  DeepPurple = \"deep_purple\",\n  Red = \"red\",\n  Teal = \"teal\",\n}\n\nexport enum ChatboxPosition {\n  Left = \"left\",\n  Right = \"right\",\n}\n\nclass Crisp {\n  // Options\n  private clientUrl: string = \"https://client.crisp.chat/l.js\";\n  private websiteId: string = \"\";\n  private autoload: boolean = true;\n  private tokenId?: string;\n  private locale?: string;\n  private sessionMerge?: boolean;\n  private cookieDomain?: string;\n  private cookieExpire?: number;\n  private lockFullview?: boolean;\n  private lockMaximized?: boolean;\n  private safeMode?: boolean;\n\n  // States\n  private injected: boolean = false;\n\n  // Instances\n  chat: CrispChat;\n  session: CrispSession;\n  user: CrispUser;\n  message: CrispMessage;\n  trigger: CrispTrigger;\n\n  constructor() {\n    this.chat = new CrispChat(this);\n    this.session = new CrispSession(this);\n    this.user = new CrispUser(this);\n    this.message = new CrispMessage(this);\n    this.trigger = new CrispTrigger(this);\n  }\n\n  configure(websiteId: string, options: Options = {}) {\n    this.websiteId = websiteId;\n    this.tokenId = options.tokenId;\n    this.locale = options.locale;\n    this.sessionMerge = options.sessionMerge;\n    this.cookieDomain = options.cookieDomain;\n    this.lockFullview = options.lockFullview;\n    this.lockMaximized = options.lockMaximized;\n    this.safeMode = options.safeMode;\n\n    if (options.clientUrl !== undefined) {\n      this.clientUrl = options.clientUrl;\n    }\n\n    if (options.autoload !== undefined) {\n      this.autoload = options.autoload;\n    }\n\n    // Autoload Crisp if option is enabled\n    if (this.autoload) {\n      this.load();\n    }\n  }\n\n  load() {\n    const _head = document.getElementsByTagName(\"head\");\n\n    this.createSingletonIfNecessary();\n\n    // Prevents from loading Crisp twice\n    if (this.isCrispInjected() === true) {\n      return;\n    }\n\n    if (!this.websiteId) {\n      throw new Error(\"websiteId must be set before loading Crisp\");\n    }\n\n    window.CRISP_WEBSITE_ID = this.websiteId;\n    window.CRISP_RUNTIME_CONFIG = {};\n\n    if (this.tokenId) {\n      window.CRISP_TOKEN_ID = this.tokenId;\n    }\n\n    if (this.sessionMerge) {\n      window.CRISP_RUNTIME_CONFIG.session_merge = true;\n    }\n\n    if (this.locale) {\n      window.CRISP_RUNTIME_CONFIG.locale = this.locale;\n    }\n\n    if (this.lockFullview) {\n      window.CRISP_RUNTIME_CONFIG.lock_full_view = true;\n    }\n\n    if (this.lockMaximized) {\n      window.CRISP_RUNTIME_CONFIG.lock_maximized = true;\n    }\n\n    if (this.cookieDomain) {\n      window.CRISP_COOKIE_DOMAIN = this.cookieDomain;\n    }\n\n    if (this.cookieExpire) {\n      window.CRISP_COOKIE_EXPIRE = this.cookieExpire;\n    }\n\n    if (!_head || !_head[0]) {\n      return this.deferredLoading();\n    }\n\n    if (this.safeMode === true) {\n      this.setSafeMode(true);\n    }\n\n    const _script = document.createElement(\"script\");\n\n    _script.src = this.clientUrl;\n    _script.async = true;\n\n    _head[0].appendChild(_script);\n\n    this.injected = true;\n  }\n\n  setTokenId(tokenId: string) {\n    this.tokenId = tokenId;\n\n    // Refresh injected token?\n    if (this.isCrispInjected() === true) {\n      if (tokenId) {\n        window.CRISP_TOKEN_ID = tokenId;\n      } else {\n        delete window.CRISP_TOKEN_ID;\n      }\n    }\n  }\n\n  setZIndex(zIndex: number) {\n    this.createSingletonIfNecessary();\n\n    window.$crisp.push([\"config\", \"container:index\", [zIndex]]);\n  }\n\n  setColorTheme(color: ChatboxColors) {\n    this.createSingletonIfNecessary();\n\n    window.$crisp.push([\"config\", \"color:theme\", [color]]);\n  }\n\n  setHideOnAway(enabled: boolean) {\n    this.createSingletonIfNecessary();\n\n    window.$crisp.push([\"config\", \"hide:on:away\", [enabled]]);\n  }\n\n  setHideOnMobile(enabled: boolean) {\n    this.createSingletonIfNecessary();\n\n    window.$crisp.push([\"config\", \"hide:on:mobile\", [enabled]]);\n  }\n\n  setPosition(position: ChatboxPosition) {\n    this.createSingletonIfNecessary();\n\n    $crisp.push([\"config\", \"position:reverse\", [position === ChatboxPosition.Left]]);\n  }\n\n  setAvailabilityTooltip(enabled: boolean) {\n    this.createSingletonIfNecessary();\n\n    window.$crisp.push([\"config\", \"availability:tooltip\", [enabled]]);\n  }\n\n  setVacationMode(enabled: boolean) {\n    this.createSingletonIfNecessary();\n\n    window.$crisp.push([\"config\", \"hide:vacation\", [enabled]]);\n  }\n\n  setSafeMode(safe: boolean = true) {\n    this.createSingletonIfNecessary();\n\n    window.$crisp.push([\"safe\", safe]);\n  }\n\n  muteSound(mute: boolean) {\n    this.createSingletonIfNecessary();\n\n    window.$crisp.push([\"config\", \"sound:mute\", [mute]]);\n  }\n\n  toggleOperatorCount(enabled: boolean) {\n    this.createSingletonIfNecessary();\n\n    window.$crisp.push([\"config\", \"show:operator:count\", [enabled]]);\n  }\n\n  createSingletonIfNecessary() {\n    // Assigns $crisp singleton\n    if (window.$crisp === undefined) {\n      window.$crisp = [];\n    }\n  }\n\n  autoInjectIfNecessasy() {\n    if (!this.isCrispInjected()) {\n      this.load();\n    }\n  }\n\n  isCrispInjected(): boolean {\n    // Check if Crisp was injected (either from the Web SDK, or from another \\\n    //   source)\n    if (this.injected === true || (window.$crisp && window.$crisp.is)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private deferredLoading() {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      this.load();\n    });\n  }\n}\n\nconst singleton = new Crisp();\n\nexport {\n  singleton as Crisp,\n  Crisp as CrispClass\n};\n"],
  "mappings": "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",
  "names": ["CrispMessage", "CrispUser", "CrispTrigger", "EventsColors", "CrispSession", "CrispChat", "ChatboxColors", "ChatboxPosition", "Crisp"]
}
